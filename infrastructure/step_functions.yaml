AWSTemplateFormatVersion: '2010-09-09'
Description: 'Step Functions state machine for Aurora Restore Pipeline'

Parameters:
  Environment:
    Type: String
    Default: dev
    Description: Environment name (dev, prod)
  
  StateTableName:
    Type: String
    Description: Name of the DynamoDB table for state management
  
  AuditTableName:
    Type: String
    Description: Name of the DynamoDB table for audit logging

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID for Lambda functions

  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs for Lambda functions

  SecurityGroupIds:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: List of security group IDs for Lambda functions

  SnapshotCheckFunctionArn:
    Type: String
    Description: ARN of the Snapshot Check Lambda function

  CopySnapshotFunctionArn:
    Type: String
    Description: ARN of the Copy Snapshot Lambda function

  CheckCopyStatusFunctionArn:
    Type: String
    Description: ARN of the Check Copy Status Lambda function

  DeleteRDSFunctionArn:
    Type: String
    Description: ARN of the Delete RDS Lambda function

  RestoreSnapshotFunctionArn:
    Type: String
    Description: ARN of the Restore Snapshot Lambda function

  CheckRestoreStatusFunctionArn:
    Type: String
    Description: ARN of the Check Restore Status Lambda function

  SetupDBUsersFunctionArn:
    Type: String
    Description: ARN of the Setup DB Users Lambda function

  ArchiveSnapshotFunctionArn:
    Type: String
    Description: ARN of the Archive Snapshot Lambda function

  SNSNotificationFunctionArn:
    Type: String
    Description: ARN of the SNS Notification Lambda function

  MaxRetries:
    Type: Number
    Default: 3
    Description: Maximum number of retries for Lambda functions

  RetryIntervalSeconds:
    Type: Number
    Default: 3
    Description: Initial retry interval in seconds

  RetryBackoffRate:
    Type: Number
    Default: 2
    Description: Retry backoff rate (multiplier for each retry)

  StateMachineTimeoutSeconds:
    Type: Number
    Default: 7200
    Description: Timeout for the entire state machine execution in seconds

Resources:
  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: AuroraRestoreStepFunctionsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Ref SnapshotCheckFunctionArn
                  - !Ref CopySnapshotFunctionArn
                  - !Ref CheckCopyStatusFunctionArn
                  - !Ref DeleteRDSFunctionArn
                  - !Ref RestoreSnapshotFunctionArn
                  - !Ref CheckRestoreStatusFunctionArn
                  - !Ref SetupDBUsersFunctionArn
                  - !Ref ArchiveSnapshotFunctionArn
                  - !Ref SNSNotificationFunctionArn
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${StateTableName}
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AuditTableName}
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource:
                  - !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:aurora-restore/*'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: aurora-restore

  AuroraRestoreStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub aurora-restore-pipeline-${Environment}
      RoleArn: !GetAtt StepFunctionsExecutionRole.Arn
      TimeoutSeconds: !Ref StateMachineTimeoutSeconds
      Definition:
        StartAt: SnapshotCheck
        States:
          SnapshotCheck:
            Type: Task
            Resource: !Ref SnapshotCheckFunctionArn
            Next: CopySnapshot
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 60
          
          CopySnapshot:
            Type: Task
            Resource: !Ref CopySnapshotFunctionArn
            Next: CheckCopyStatus
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 60
          
          CheckCopyStatus:
            Type: Task
            Resource: !Ref CheckCopyStatusFunctionArn
            Next: IsCopyComplete
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 30
          
          IsCopyComplete:
            Type: Choice
            Choices:
              - Variable: "$.body.copy_status"
                StringEquals: "available"
                Next: DeleteRDS
            Default: WaitForCopy
          
          WaitForCopy:
            Type: Wait
            Seconds: 30
            Next: CheckCopyStatus
          
          DeleteRDS:
            Type: Task
            Resource: !Ref DeleteRDSFunctionArn
            Next: RestoreSnapshot
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 60
          
          RestoreSnapshot:
            Type: Task
            Resource: !Ref RestoreSnapshotFunctionArn
            Next: CheckRestoreStatus
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 60
          
          CheckRestoreStatus:
            Type: Task
            Resource: !Ref CheckRestoreStatusFunctionArn
            Next: IsRestoreComplete
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 30
          
          IsRestoreComplete:
            Type: Choice
            Choices:
              - Variable: "$.body.restore_status"
                StringEquals: "available"
                Next: SetupDBUsers
            Default: WaitForRestore
          
          WaitForRestore:
            Type: Wait
            Seconds: 60
            Next: CheckRestoreStatus
          
          SetupDBUsers:
            Type: Task
            Resource: !Ref SetupDBUsersFunctionArn
            Next: ArchiveSnapshot
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 60
          
          ArchiveSnapshot:
            Type: Task
            Resource: !Ref ArchiveSnapshotFunctionArn
            Next: SendNotification
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 60
          
          SendNotification:
            Type: Task
            Resource: !Ref SNSNotificationFunctionArn
            End: true
            Retry:
              - ErrorEquals: ["States.TaskFailed"]
                IntervalSeconds: !Ref RetryIntervalSeconds
                MaxAttempts: !Ref MaxRetries
                BackoffRate: !Ref RetryBackoffRate
            Catch:
              - ErrorEquals: ["States.ALL"]
                Next: HandleFailure
                ResultPath: "$.error"
            TimeoutSeconds: 30
          
          HandleFailure:
            Type: Task
            Resource: !Ref SNSNotificationFunctionArn
            End: true
            Parameters:
              operation_id.$: "$.operation_id"
              step: "pipeline"
              status: "FAILED"
              error.$: "$.error"
              details:
                error_message.$: "$.error.Cause"
                error_type.$: "$.error.Error"
            TimeoutSeconds: 30
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: aurora-restore

Outputs:
  StateMachineArn:
    Description: ARN of the Aurora Restore Step Functions state machine
    Value: !GetAtt AuroraRestoreStateMachine.Arn
    Export:
      Name: !Sub ${AWS::StackName}-StateMachineArn

  StateMachineName:
    Description: Name of the Aurora Restore Step Functions state machine
    Value: !Ref AuroraRestoreStateMachine
    Export:
      Name: !Sub ${AWS::StackName}-StateMachineName 